1. Singletom
    類別只能new單一物件 舉例: 開車一次只能有一人使用除非使用者不使用下個人才可以使用

2. Factory
    不同類別有共用介面使用 由client傳入參數做產出 舉例: 美國工廠生產石油 阿拉伯工廠產石油
    
3. FactoryMethod
    分層類別由類別傳遞方法 舉例: 生產車子 分生產外殼 生產內裝
    
4. prototype
    透過clone複製類別狀態 舉例: 抄襲文章

5. Adapter
    一個透過的媒介串聯的行為 舉例: 螢幕轉接器 分別橋接主機與螢幕的橋樑

6. Bridge
    要求介面 實作不一定相同 舉例: 藍圖 與 工廠關係 拆分(抽像類)設計與()介面類)實作

7. Decorade
    由抽象類別繼承類別一層一層有所關連 舉例: 運送貨車裡面包含貨物箱 貨物箱包含貨物品 貨車可代表整體加總

8. Facade
    將多步驟寫成類別包裝可透過包裝類別當作一個系統類別 舉例: 多輸出接頭集線器 一個多功能橋接器可支援各種介面使用

9. Observer
    主角為主題與觀察者主題可被多個觀 察者訂閱當主題的狀態發生變化時它必須通知 所有訂閱它的觀察者 觀察者檢視主題的狀態變化 並作出對應的動作 舉例:windows升級 內建軟體也升級

10. Command
    較互動adapter模式 舉例: 電源關擁有開與關方法可控制多種電器

11. 心得
    物件導向心得 物件導向優點: 1.可利用重複性功能或共同性規則 作抽像類別 以繼承或介面方式彈性挪用避免多次重工
                               2.可以有比較好的調理 對於程式重構或是閱讀有比較大的幫助
                               3.如有較大的專案 以MVC框架分工對於程式的撰寫速度也可提升